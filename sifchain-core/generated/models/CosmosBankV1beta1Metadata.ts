/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  InlineResponse2004DenomUnits,
  InlineResponse2004DenomUnitsFromJSON,
  InlineResponse2004DenomUnitsFromJSONTyped,
  InlineResponse2004DenomUnitsToJSON,
} from "./";

/**
 * Metadata represents a struct that describes
 * a basic token.
 * @export
 * @interface CosmosBankV1beta1Metadata
 */
export interface CosmosBankV1beta1Metadata {
  /**
   *
   * @type {string}
   * @memberof CosmosBankV1beta1Metadata
   */
  description?: string;
  /**
   *
   * @type {Array<InlineResponse2004DenomUnits>}
   * @memberof CosmosBankV1beta1Metadata
   */
  denomUnits?: Array<InlineResponse2004DenomUnits>;
  /**
   * base represents the base denom (should be the DenomUnit with exponent = 0).
   * @type {string}
   * @memberof CosmosBankV1beta1Metadata
   */
  base?: string;
  /**
   * display indicates the suggested denom that should be
   * displayed in clients.
   * @type {string}
   * @memberof CosmosBankV1beta1Metadata
   */
  display?: string;
}

export function CosmosBankV1beta1MetadataFromJSON(
  json: any,
): CosmosBankV1beta1Metadata {
  return CosmosBankV1beta1MetadataFromJSONTyped(json, false);
}

export function CosmosBankV1beta1MetadataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CosmosBankV1beta1Metadata {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    description: !exists(json, "description") ? undefined : json["description"],
    denomUnits: !exists(json, "denom_units")
      ? undefined
      : (json["denom_units"] as Array<any>).map(
          InlineResponse2004DenomUnitsFromJSON,
        ),
    base: !exists(json, "base") ? undefined : json["base"],
    display: !exists(json, "display") ? undefined : json["display"],
  };
}

export function CosmosBankV1beta1MetadataToJSON(
  value?: CosmosBankV1beta1Metadata | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    description: value.description,
    denom_units:
      value.denomUnits === undefined
        ? undefined
        : (value.denomUnits as Array<any>).map(
            InlineResponse2004DenomUnitsToJSON,
          ),
    base: value.base,
    display: value.display,
  };
}
