/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * message SomeRequest {
 *          Foo some_parameter = 1;
 *          PageRequest pagination = 2;
 *  }
 * @export
 * @interface CosmosBaseQueryV1beta1PageRequest
 */
export interface CosmosBaseQueryV1beta1PageRequest {
  /**
   * key is a value returned in PageResponse.next_key to begin
   * querying the next page most efficiently. Only one of offset or key
   * should be set.
   * @type {string}
   * @memberof CosmosBaseQueryV1beta1PageRequest
   */
  key?: string;
  /**
   * offset is a numeric offset that can be used when key is unavailable.
   * It is less efficient than using key. Only one of offset or key should
   * be set.
   * @type {string}
   * @memberof CosmosBaseQueryV1beta1PageRequest
   */
  offset?: string;
  /**
   * limit is the total number of results to be returned in the result page.
   * If left empty it will default to a value to be set by each app.
   * @type {string}
   * @memberof CosmosBaseQueryV1beta1PageRequest
   */
  limit?: string;
  /**
   * count_total is set to true  to indicate that the result set should include
   * a count of the total number of items available for pagination in UIs.
   * count_total is only respected when offset is used. It is ignored when key
   * is set.
   * @type {boolean}
   * @memberof CosmosBaseQueryV1beta1PageRequest
   */
  countTotal?: boolean;
}

export function CosmosBaseQueryV1beta1PageRequestFromJSON(
  json: any,
): CosmosBaseQueryV1beta1PageRequest {
  return CosmosBaseQueryV1beta1PageRequestFromJSONTyped(json, false);
}

export function CosmosBaseQueryV1beta1PageRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CosmosBaseQueryV1beta1PageRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    key: !exists(json, "key") ? undefined : json["key"],
    offset: !exists(json, "offset") ? undefined : json["offset"],
    limit: !exists(json, "limit") ? undefined : json["limit"],
    countTotal: !exists(json, "count_total") ? undefined : json["count_total"],
  };
}

export function CosmosBaseQueryV1beta1PageRequestToJSON(
  value?: CosmosBaseQueryV1beta1PageRequest | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    key: value.key,
    offset: value.offset,
    limit: value.limit,
    count_total: value.countTotal,
  };
}
