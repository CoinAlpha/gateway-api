/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * Params defines the parameters for the staking module.
 * @export
 * @interface CosmosStakingV1beta1Params
 */
export interface CosmosStakingV1beta1Params {
  /**
   * unbonding_time is the time duration of unbonding.
   * @type {string}
   * @memberof CosmosStakingV1beta1Params
   */
  unbondingTime?: string;
  /**
   * max_validators is the maximum number of validators.
   * @type {number}
   * @memberof CosmosStakingV1beta1Params
   */
  maxValidators?: number;
  /**
   * max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
   * @type {number}
   * @memberof CosmosStakingV1beta1Params
   */
  maxEntries?: number;
  /**
   * historical_entries is the number of historical entries to persist.
   * @type {number}
   * @memberof CosmosStakingV1beta1Params
   */
  historicalEntries?: number;
  /**
   * bond_denom defines the bondable coin denomination.
   * @type {string}
   * @memberof CosmosStakingV1beta1Params
   */
  bondDenom?: string;
  /**
   *
   * @type {string}
   * @memberof CosmosStakingV1beta1Params
   */
  powerReduction?: string;
  /**
   *
   * @type {string}
   * @memberof CosmosStakingV1beta1Params
   */
  minCommissionRate?: string;
}

export function CosmosStakingV1beta1ParamsFromJSON(
  json: any,
): CosmosStakingV1beta1Params {
  return CosmosStakingV1beta1ParamsFromJSONTyped(json, false);
}

export function CosmosStakingV1beta1ParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CosmosStakingV1beta1Params {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    unbondingTime: !exists(json, "unbonding_time")
      ? undefined
      : json["unbonding_time"],
    maxValidators: !exists(json, "max_validators")
      ? undefined
      : json["max_validators"],
    maxEntries: !exists(json, "max_entries") ? undefined : json["max_entries"],
    historicalEntries: !exists(json, "historical_entries")
      ? undefined
      : json["historical_entries"],
    bondDenom: !exists(json, "bond_denom") ? undefined : json["bond_denom"],
    powerReduction: !exists(json, "power_reduction")
      ? undefined
      : json["power_reduction"],
    minCommissionRate: !exists(json, "min_commission_rate")
      ? undefined
      : json["min_commission_rate"],
  };
}

export function CosmosStakingV1beta1ParamsToJSON(
  value?: CosmosStakingV1beta1Params | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    unbonding_time: value.unbondingTime,
    max_validators: value.maxValidators,
    max_entries: value.maxEntries,
    historical_entries: value.historicalEntries,
    bond_denom: value.bondDenom,
    power_reduction: value.powerReduction,
    min_commission_rate: value.minCommissionRate,
  };
}
