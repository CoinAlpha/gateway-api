/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  InlineResponse20019FinalTallyResult,
  InlineResponse20019FinalTallyResultFromJSON,
  InlineResponse20019FinalTallyResultFromJSONTyped,
  InlineResponse20019FinalTallyResultToJSON,
  InlineResponse2002Balances,
  InlineResponse2002BalancesFromJSON,
  InlineResponse2002BalancesFromJSONTyped,
  InlineResponse2002BalancesToJSON,
  InlineResponseDefaultDetails,
  InlineResponseDefaultDetailsFromJSON,
  InlineResponseDefaultDetailsFromJSONTyped,
  InlineResponseDefaultDetailsToJSON,
} from "./";

/**
 * Proposal defines the core field members of a governance proposal.
 * @export
 * @interface InlineResponse20019Proposals
 */
export interface InlineResponse20019Proposals {
  /**
   *
   * @type {string}
   * @memberof InlineResponse20019Proposals
   */
  proposalId?: string;
  /**
   *
   * @type {InlineResponseDefaultDetails}
   * @memberof InlineResponse20019Proposals
   */
  content?: InlineResponseDefaultDetails;
  /**
   * ProposalStatus enumerates the valid statuses of a proposal.
   *
   *  - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
   *  - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
   * period.
   *  - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
   * period.
   *  - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
   * passed.
   *  - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
   * been rejected.
   *  - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
   * failed.
   * @type {string}
   * @memberof InlineResponse20019Proposals
   */
  status?: InlineResponse20019ProposalsStatusEnum;
  /**
   *
   * @type {InlineResponse20019FinalTallyResult}
   * @memberof InlineResponse20019Proposals
   */
  finalTallyResult?: InlineResponse20019FinalTallyResult;
  /**
   *
   * @type {Date}
   * @memberof InlineResponse20019Proposals
   */
  submitTime?: Date;
  /**
   *
   * @type {Date}
   * @memberof InlineResponse20019Proposals
   */
  depositEndTime?: Date;
  /**
   *
   * @type {Array<InlineResponse2002Balances>}
   * @memberof InlineResponse20019Proposals
   */
  totalDeposit?: Array<InlineResponse2002Balances>;
  /**
   *
   * @type {Date}
   * @memberof InlineResponse20019Proposals
   */
  votingStartTime?: Date;
  /**
   *
   * @type {Date}
   * @memberof InlineResponse20019Proposals
   */
  votingEndTime?: Date;
}

/**
 * @export
 * @enum {string}
 */
export enum InlineResponse20019ProposalsStatusEnum {
  Unspecified = "PROPOSAL_STATUS_UNSPECIFIED",
  DepositPeriod = "PROPOSAL_STATUS_DEPOSIT_PERIOD",
  VotingPeriod = "PROPOSAL_STATUS_VOTING_PERIOD",
  Passed = "PROPOSAL_STATUS_PASSED",
  Rejected = "PROPOSAL_STATUS_REJECTED",
  Failed = "PROPOSAL_STATUS_FAILED",
}

export function InlineResponse20019ProposalsFromJSON(
  json: any,
): InlineResponse20019Proposals {
  return InlineResponse20019ProposalsFromJSONTyped(json, false);
}

export function InlineResponse20019ProposalsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): InlineResponse20019Proposals {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    proposalId: !exists(json, "proposal_id") ? undefined : json["proposal_id"],
    content: !exists(json, "content")
      ? undefined
      : InlineResponseDefaultDetailsFromJSON(json["content"]),
    status: !exists(json, "status") ? undefined : json["status"],
    finalTallyResult: !exists(json, "final_tally_result")
      ? undefined
      : InlineResponse20019FinalTallyResultFromJSON(json["final_tally_result"]),
    submitTime: !exists(json, "submit_time")
      ? undefined
      : new Date(json["submit_time"]),
    depositEndTime: !exists(json, "deposit_end_time")
      ? undefined
      : new Date(json["deposit_end_time"]),
    totalDeposit: !exists(json, "total_deposit")
      ? undefined
      : (json["total_deposit"] as Array<any>).map(
          InlineResponse2002BalancesFromJSON,
        ),
    votingStartTime: !exists(json, "voting_start_time")
      ? undefined
      : new Date(json["voting_start_time"]),
    votingEndTime: !exists(json, "voting_end_time")
      ? undefined
      : new Date(json["voting_end_time"]),
  };
}

export function InlineResponse20019ProposalsToJSON(
  value?: InlineResponse20019Proposals | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    proposal_id: value.proposalId,
    content: InlineResponseDefaultDetailsToJSON(value.content),
    status: value.status,
    final_tally_result: InlineResponse20019FinalTallyResultToJSON(
      value.finalTallyResult,
    ),
    submit_time:
      value.submitTime === undefined
        ? undefined
        : value.submitTime.toISOString(),
    deposit_end_time:
      value.depositEndTime === undefined
        ? undefined
        : value.depositEndTime.toISOString(),
    total_deposit:
      value.totalDeposit === undefined
        ? undefined
        : (value.totalDeposit as Array<any>).map(
            InlineResponse2002BalancesToJSON,
          ),
    voting_start_time:
      value.votingStartTime === undefined
        ? undefined
        : value.votingStartTime.toISOString(),
    voting_end_time:
      value.votingEndTime === undefined
        ? undefined
        : value.votingEndTime.toISOString(),
  };
}
