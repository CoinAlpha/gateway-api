/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * Vote defines a vote on a governance proposal.
 * A Vote consists of a proposal ID, the voter, and the vote option.
 * @export
 * @interface InlineResponse20024Votes
 */
export interface InlineResponse20024Votes {
  /**
   *
   * @type {string}
   * @memberof InlineResponse20024Votes
   */
  proposalId?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20024Votes
   */
  voter?: string;
  /**
   * VoteOption enumerates the valid vote options for a given governance proposal.
   *
   *  - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
   *  - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
   *  - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
   *  - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
   *  - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
   * @type {string}
   * @memberof InlineResponse20024Votes
   */
  option?: InlineResponse20024VotesOptionEnum;
}

/**
 * @export
 * @enum {string}
 */
export enum InlineResponse20024VotesOptionEnum {
  Unspecified = "VOTE_OPTION_UNSPECIFIED",
  Yes = "VOTE_OPTION_YES",
  Abstain = "VOTE_OPTION_ABSTAIN",
  No = "VOTE_OPTION_NO",
  NoWithVeto = "VOTE_OPTION_NO_WITH_VETO",
}

export function InlineResponse20024VotesFromJSON(
  json: any,
): InlineResponse20024Votes {
  return InlineResponse20024VotesFromJSONTyped(json, false);
}

export function InlineResponse20024VotesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): InlineResponse20024Votes {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    proposalId: !exists(json, "proposal_id") ? undefined : json["proposal_id"],
    voter: !exists(json, "voter") ? undefined : json["voter"],
    option: !exists(json, "option") ? undefined : json["option"],
  };
}

export function InlineResponse20024VotesToJSON(
  value?: InlineResponse20024Votes | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    proposal_id: value.proposalId,
    voter: value.voter,
    option: value.option,
  };
}
