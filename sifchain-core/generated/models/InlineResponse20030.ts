/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  InlineResponse2002Pagination,
  InlineResponse2002PaginationFromJSON,
  InlineResponse2002PaginationFromJSONTyped,
  InlineResponse2002PaginationToJSON,
  InlineResponse20030Validators,
  InlineResponse20030ValidatorsFromJSON,
  InlineResponse20030ValidatorsFromJSONTyped,
  InlineResponse20030ValidatorsToJSON,
} from "./";

/**
 * QueryDelegatorValidatorsResponse is response type for the
 * Query/DelegatorValidators RPC method.
 * @export
 * @interface InlineResponse20030
 */
export interface InlineResponse20030 {
  /**
   * validators defines the the validators' info of a delegator.
   * @type {Array<InlineResponse20030Validators>}
   * @memberof InlineResponse20030
   */
  validators?: Array<InlineResponse20030Validators>;
  /**
   *
   * @type {InlineResponse2002Pagination}
   * @memberof InlineResponse20030
   */
  pagination?: InlineResponse2002Pagination;
}

export function InlineResponse20030FromJSON(json: any): InlineResponse20030 {
  return InlineResponse20030FromJSONTyped(json, false);
}

export function InlineResponse20030FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): InlineResponse20030 {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    validators: !exists(json, "validators")
      ? undefined
      : (json["validators"] as Array<any>).map(
          InlineResponse20030ValidatorsFromJSON,
        ),
    pagination: !exists(json, "pagination")
      ? undefined
      : InlineResponse2002PaginationFromJSON(json["pagination"]),
  };
}

export function InlineResponse20030ToJSON(
  value?: InlineResponse20030 | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    validators:
      value.validators === undefined
        ? undefined
        : (value.validators as Array<any>).map(
            InlineResponse20030ValidatorsToJSON,
          ),
    pagination: InlineResponse2002PaginationToJSON(value.pagination),
  };
}
