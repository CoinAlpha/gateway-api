/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  InlineResponse20030Commission,
  InlineResponse20030CommissionFromJSON,
  InlineResponse20030CommissionFromJSONTyped,
  InlineResponse20030CommissionToJSON,
  InlineResponse20030ConsensusPubkey,
  InlineResponse20030ConsensusPubkeyFromJSON,
  InlineResponse20030ConsensusPubkeyFromJSONTyped,
  InlineResponse20030ConsensusPubkeyToJSON,
  InlineResponse20030Description,
  InlineResponse20030DescriptionFromJSON,
  InlineResponse20030DescriptionFromJSONTyped,
  InlineResponse20030DescriptionToJSON,
} from "./";

/**
 * Validator defines a validator, together with the total amount of the
 * Validator's bond shares and their exchange rate to coins. Slashing results in
 * a decrease in the exchange rate, allowing correct calculation of future
 * undelegations without iterating over delegators. When coins are delegated to
 * this validator, the validator is credited with a delegation whose number of
 * bond shares is based on the amount of coins delegated divided by the current
 * exchange rate. Voting power can be calculated as total bonded shares
 * multiplied by exchange rate.
 * @export
 * @interface InlineResponse20030Validators
 */
export interface InlineResponse20030Validators {
  /**
   * operator_address defines the address of the validator's operator; bech encoded in JSON.
   * @type {string}
   * @memberof InlineResponse20030Validators
   */
  operatorAddress?: string;
  /**
   *
   * @type {InlineResponse20030ConsensusPubkey}
   * @memberof InlineResponse20030Validators
   */
  consensusPubkey?: InlineResponse20030ConsensusPubkey;
  /**
   * jailed defined whether the validator has been jailed from bonded status or not.
   * @type {boolean}
   * @memberof InlineResponse20030Validators
   */
  jailed?: boolean;
  /**
   * status is the validator status (bonded/unbonding/unbonded).
   * @type {string}
   * @memberof InlineResponse20030Validators
   */
  status?: InlineResponse20030ValidatorsStatusEnum;
  /**
   * tokens define the delegated tokens (incl. self-delegation).
   * @type {string}
   * @memberof InlineResponse20030Validators
   */
  tokens?: string;
  /**
   * delegator_shares defines total shares issued to a validator's delegators.
   * @type {string}
   * @memberof InlineResponse20030Validators
   */
  delegatorShares?: string;
  /**
   *
   * @type {InlineResponse20030Description}
   * @memberof InlineResponse20030Validators
   */
  description?: InlineResponse20030Description;
  /**
   * unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
   * @type {string}
   * @memberof InlineResponse20030Validators
   */
  unbondingHeight?: string;
  /**
   * unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
   * @type {Date}
   * @memberof InlineResponse20030Validators
   */
  unbondingTime?: Date;
  /**
   *
   * @type {InlineResponse20030Commission}
   * @memberof InlineResponse20030Validators
   */
  commission?: InlineResponse20030Commission;
  /**
   * min_self_delegation is the validator's self declared minimum self delegation.
   * @type {string}
   * @memberof InlineResponse20030Validators
   */
  minSelfDelegation?: string;
}

/**
 * @export
 * @enum {string}
 */
export enum InlineResponse20030ValidatorsStatusEnum {
  Unspecified = "BOND_STATUS_UNSPECIFIED",
  Unbonded = "BOND_STATUS_UNBONDED",
  Unbonding = "BOND_STATUS_UNBONDING",
  Bonded = "BOND_STATUS_BONDED",
}

export function InlineResponse20030ValidatorsFromJSON(
  json: any,
): InlineResponse20030Validators {
  return InlineResponse20030ValidatorsFromJSONTyped(json, false);
}

export function InlineResponse20030ValidatorsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): InlineResponse20030Validators {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    operatorAddress: !exists(json, "operator_address")
      ? undefined
      : json["operator_address"],
    consensusPubkey: !exists(json, "consensus_pubkey")
      ? undefined
      : InlineResponse20030ConsensusPubkeyFromJSON(json["consensus_pubkey"]),
    jailed: !exists(json, "jailed") ? undefined : json["jailed"],
    status: !exists(json, "status") ? undefined : json["status"],
    tokens: !exists(json, "tokens") ? undefined : json["tokens"],
    delegatorShares: !exists(json, "delegator_shares")
      ? undefined
      : json["delegator_shares"],
    description: !exists(json, "description")
      ? undefined
      : InlineResponse20030DescriptionFromJSON(json["description"]),
    unbondingHeight: !exists(json, "unbonding_height")
      ? undefined
      : json["unbonding_height"],
    unbondingTime: !exists(json, "unbonding_time")
      ? undefined
      : new Date(json["unbonding_time"]),
    commission: !exists(json, "commission")
      ? undefined
      : InlineResponse20030CommissionFromJSON(json["commission"]),
    minSelfDelegation: !exists(json, "min_self_delegation")
      ? undefined
      : json["min_self_delegation"],
  };
}

export function InlineResponse20030ValidatorsToJSON(
  value?: InlineResponse20030Validators | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    operator_address: value.operatorAddress,
    consensus_pubkey: InlineResponse20030ConsensusPubkeyToJSON(
      value.consensusPubkey,
    ),
    jailed: value.jailed,
    status: value.status,
    tokens: value.tokens,
    delegator_shares: value.delegatorShares,
    description: InlineResponse20030DescriptionToJSON(value.description),
    unbonding_height: value.unbondingHeight,
    unbonding_time:
      value.unbondingTime === undefined
        ? undefined
        : value.unbondingTime.toISOString(),
    commission: InlineResponse20030CommissionToJSON(value.commission),
    min_self_delegation: value.minSelfDelegation,
  };
}
