/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  BasicBlockInfo,
  BasicBlockInfoFromJSON,
  BasicBlockInfoFromJSONTyped,
  BasicBlockInfoToJSON,
  PrevBlockInfo,
  PrevBlockInfoFromJSON,
  PrevBlockInfoFromJSONTyped,
  PrevBlockInfoToJSON,
} from "./";

/**
 * Header defines the structure of a Tendermint block header.
 * @export
 * @interface InlineResponse20032HistHeader
 */
export interface InlineResponse20032HistHeader {
  /**
   *
   * @type {BasicBlockInfo}
   * @memberof InlineResponse20032HistHeader
   */
  version?: BasicBlockInfo;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  chainId?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  height?: string;
  /**
   *
   * @type {Date}
   * @memberof InlineResponse20032HistHeader
   */
  time?: Date;
  /**
   *
   * @type {PrevBlockInfo}
   * @memberof InlineResponse20032HistHeader
   */
  lastBlockId?: PrevBlockInfo;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  lastCommitHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  dataHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  validatorsHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  nextValidatorsHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  consensusHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  appHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  lastResultsHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  evidenceHash?: string;
  /**
   *
   * @type {string}
   * @memberof InlineResponse20032HistHeader
   */
  proposerAddress?: string;
}

export function InlineResponse20032HistHeaderFromJSON(
  json: any,
): InlineResponse20032HistHeader {
  return InlineResponse20032HistHeaderFromJSONTyped(json, false);
}

export function InlineResponse20032HistHeaderFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): InlineResponse20032HistHeader {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    version: !exists(json, "version")
      ? undefined
      : BasicBlockInfoFromJSON(json["version"]),
    chainId: !exists(json, "chain_id") ? undefined : json["chain_id"],
    height: !exists(json, "height") ? undefined : json["height"],
    time: !exists(json, "time") ? undefined : new Date(json["time"]),
    lastBlockId: !exists(json, "last_block_id")
      ? undefined
      : PrevBlockInfoFromJSON(json["last_block_id"]),
    lastCommitHash: !exists(json, "last_commit_hash")
      ? undefined
      : json["last_commit_hash"],
    dataHash: !exists(json, "data_hash") ? undefined : json["data_hash"],
    validatorsHash: !exists(json, "validators_hash")
      ? undefined
      : json["validators_hash"],
    nextValidatorsHash: !exists(json, "next_validators_hash")
      ? undefined
      : json["next_validators_hash"],
    consensusHash: !exists(json, "consensus_hash")
      ? undefined
      : json["consensus_hash"],
    appHash: !exists(json, "app_hash") ? undefined : json["app_hash"],
    lastResultsHash: !exists(json, "last_results_hash")
      ? undefined
      : json["last_results_hash"],
    evidenceHash: !exists(json, "evidence_hash")
      ? undefined
      : json["evidence_hash"],
    proposerAddress: !exists(json, "proposer_address")
      ? undefined
      : json["proposer_address"],
  };
}

export function InlineResponse20032HistHeaderToJSON(
  value?: InlineResponse20032HistHeader | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    version: BasicBlockInfoToJSON(value.version),
    chain_id: value.chainId,
    height: value.height,
    time: value.time === undefined ? undefined : value.time.toISOString(),
    last_block_id: PrevBlockInfoToJSON(value.lastBlockId),
    last_commit_hash: value.lastCommitHash,
    data_hash: value.dataHash,
    validators_hash: value.validatorsHash,
    next_validators_hash: value.nextValidatorsHash,
    consensus_hash: value.consensusHash,
    app_hash: value.appHash,
    last_results_hash: value.lastResultsHash,
    evidence_hash: value.evidenceHash,
    proposer_address: value.proposerAddress,
  };
}
