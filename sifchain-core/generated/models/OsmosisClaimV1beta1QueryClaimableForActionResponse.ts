/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  InlineResponse2002Balances,
  InlineResponse2002BalancesFromJSON,
  InlineResponse2002BalancesFromJSONTyped,
  InlineResponse2002BalancesToJSON,
} from "./";

/**
 *
 * @export
 * @interface OsmosisClaimV1beta1QueryClaimableForActionResponse
 */
export interface OsmosisClaimV1beta1QueryClaimableForActionResponse {
  /**
   *
   * @type {Array<InlineResponse2002Balances>}
   * @memberof OsmosisClaimV1beta1QueryClaimableForActionResponse
   */
  coins?: Array<InlineResponse2002Balances>;
}

export function OsmosisClaimV1beta1QueryClaimableForActionResponseFromJSON(
  json: any,
): OsmosisClaimV1beta1QueryClaimableForActionResponse {
  return OsmosisClaimV1beta1QueryClaimableForActionResponseFromJSONTyped(
    json,
    false,
  );
}

export function OsmosisClaimV1beta1QueryClaimableForActionResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsmosisClaimV1beta1QueryClaimableForActionResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    coins: !exists(json, "coins")
      ? undefined
      : (json["coins"] as Array<any>).map(InlineResponse2002BalancesFromJSON),
  };
}

export function OsmosisClaimV1beta1QueryClaimableForActionResponseToJSON(
  value?: OsmosisClaimV1beta1QueryClaimableForActionResponse | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    coins:
      value.coins === undefined
        ? undefined
        : (value.coins as Array<any>).map(InlineResponse2002BalancesToJSON),
  };
}
