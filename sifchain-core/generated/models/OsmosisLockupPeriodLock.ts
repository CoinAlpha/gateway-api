/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  InlineResponse2002Balances,
  InlineResponse2002BalancesFromJSON,
  InlineResponse2002BalancesFromJSONTyped,
  InlineResponse2002BalancesToJSON,
} from "./";

/**
 * PeriodLock is a single unit of lock by period. It's a record of locked coin
 * at a specific time. It stores owner, duration, unlock time and the amount of
 * coins locked.
 * @export
 * @interface OsmosisLockupPeriodLock
 */
export interface OsmosisLockupPeriodLock {
  /**
   *
   * @type {string}
   * @memberof OsmosisLockupPeriodLock
   */
  iD?: string;
  /**
   *
   * @type {string}
   * @memberof OsmosisLockupPeriodLock
   */
  owner?: string;
  /**
   *
   * @type {string}
   * @memberof OsmosisLockupPeriodLock
   */
  duration?: string;
  /**
   *
   * @type {Date}
   * @memberof OsmosisLockupPeriodLock
   */
  endTime?: Date;
  /**
   *
   * @type {Array<InlineResponse2002Balances>}
   * @memberof OsmosisLockupPeriodLock
   */
  coins?: Array<InlineResponse2002Balances>;
}

export function OsmosisLockupPeriodLockFromJSON(
  json: any,
): OsmosisLockupPeriodLock {
  return OsmosisLockupPeriodLockFromJSONTyped(json, false);
}

export function OsmosisLockupPeriodLockFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsmosisLockupPeriodLock {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    iD: !exists(json, "ID") ? undefined : json["ID"],
    owner: !exists(json, "owner") ? undefined : json["owner"],
    duration: !exists(json, "duration") ? undefined : json["duration"],
    endTime: !exists(json, "end_time") ? undefined : new Date(json["end_time"]),
    coins: !exists(json, "coins")
      ? undefined
      : (json["coins"] as Array<any>).map(InlineResponse2002BalancesFromJSON),
  };
}

export function OsmosisLockupPeriodLockToJSON(
  value?: OsmosisLockupPeriodLock | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    ID: value.iD,
    owner: value.owner,
    duration: value.duration,
    end_time:
      value.endTime === undefined ? undefined : value.endTime.toISOString(),
    coins:
      value.coins === undefined
        ? undefined
        : (value.coins as Array<any>).map(InlineResponse2002BalancesToJSON),
  };
}
