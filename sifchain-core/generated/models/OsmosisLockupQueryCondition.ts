/* tslint:disable */
/* eslint-disable */
/**
 * Sifchain - gRPC Gateway docs
 * A REST interface for state queries, legacy transactions
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface OsmosisLockupQueryCondition
 */
export interface OsmosisLockupQueryCondition {
  /**
   *
   * @type {string}
   * @memberof OsmosisLockupQueryCondition
   */
  lockQueryType?: OsmosisLockupQueryConditionLockQueryTypeEnum;
  /**
   *
   * @type {string}
   * @memberof OsmosisLockupQueryCondition
   */
  denom?: string;
  /**
   *
   * @type {string}
   * @memberof OsmosisLockupQueryCondition
   */
  duration?: string;
  /**
   *
   * @type {Date}
   * @memberof OsmosisLockupQueryCondition
   */
  timestamp?: Date;
}

/**
 * @export
 * @enum {string}
 */
export enum OsmosisLockupQueryConditionLockQueryTypeEnum {
  ByDuration = "ByDuration",
  ByTime = "ByTime",
}

export function OsmosisLockupQueryConditionFromJSON(
  json: any,
): OsmosisLockupQueryCondition {
  return OsmosisLockupQueryConditionFromJSONTyped(json, false);
}

export function OsmosisLockupQueryConditionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsmosisLockupQueryCondition {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    lockQueryType: !exists(json, "lock_query_type")
      ? undefined
      : json["lock_query_type"],
    denom: !exists(json, "denom") ? undefined : json["denom"],
    duration: !exists(json, "duration") ? undefined : json["duration"],
    timestamp: !exists(json, "timestamp")
      ? undefined
      : new Date(json["timestamp"]),
  };
}

export function OsmosisLockupQueryConditionToJSON(
  value?: OsmosisLockupQueryCondition | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    lock_query_type: value.lockQueryType,
    denom: value.denom,
    duration: value.duration,
    timestamp:
      value.timestamp === undefined ? undefined : value.timestamp.toISOString(),
  };
}
